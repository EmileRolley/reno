'use client'
import MapBehindCTA from '@/components/MapBehindCTA'
import Link from 'next/link'
import { useState } from 'react'
import styled from 'styled-components'

export default function Contact({ fromLocation }) {
  const [comment, setComment] = useState('')
  const [sent, setSent] = useState(false)
  const [type, setType] = useState('')
  const createIssue = (
    body: string,
    labels = ['üíÅ contribution externe'],
  ) => {
    if (body == null || body =='') {
      return null
    }
  
    fetch(
      '/faq/api?' +
        Object.entries({
          repo: 'mesaidesreno/feedback-utilisateur',
          title: "Retour utilisateurs",
          body,
          labels,
        })
          .map(([k, v]) => k + '=' + encodeURIComponent(v))
          .join('&'),
      { mode: 'cors' },
    )
      .then((response) => response.json())
      .then((json) => {
        setSent(true)
        setType("anonyme")
      })
  }

  return sent ? (
    <section>
      <h3> üòç Merci √† vous</h3>
      <p>Gr√¢ce √† votre retour, vous contribuer √† l'am√©lioration de ce service.</p>
      { type == "email" && (
        <p>Nous nous effor√ßons de revenir vers vous dans les plus brefs d√©lais.</p>
      )}
      <p>Vous pouvez √©galement contacter <strong> l'espace France R√©nov' le plus proche de chez vous </strong> 
        qui est <strong>votre interlocuteur privil√©gi√©</strong> pour toutes les questions concernant votre projet de r√©novation.</p>
      <MapBehindCTA
          {...{
            what: 'trouver-conseiller-renov',
            text: 'Trouver mon conseiller',
            link: 'https://france-renov.gouv.fr/preparer-projet/trouver-conseiller#trouver-un-espace-conseil-france-renov',
          }}
      />
    </section>
  ) : (
    <>
      <h3>üôã J'ai une question</h3>
      <p>
        Nous sommes preneurs de toutes vos remarques, questions, suggestions et avis.<br />
        <strong>N'h√©sitez pas</strong> √† nous envoyer un message via le formulaire de contact ci-dessous.
      </p>
      <form css={formStyle}>
        <label>
          <textarea
            aria-describedby="messageAttention"
            value={comment}
            onChange={(e) => setComment(e.target.value)}
            name="comment"
            placeholder="S'il s'agit d'un bug, merci de nous indiquer le navigateur que vous utilisez
              (par exemple Firefox version 93, Chrome version 95, Safari, etc.),
              la plateforme (iPhone, Android, ordinateur Windows, etc.) ainsi que l'url concern√©e, vous
              nous aiderez √† r√©soudre le bug plus rapidement."
            required
          />
        </label>
        <Link
          css={`background: var(--color);
              color: white;
              padding: 0.8rem 1.2rem;
              border: none;
              text-decoration: none;`  
          }
          href={`mailto:contact@mesaidesreno.fr?subject=&body=${encodeURIComponent(comment)}`}
          title="Nous vous recontacterons dans les plus brefs d√©lais"
          target="_blank"
          onClick={() => {
            setSent(true)
            setType("email")
          }}
        >
          ‚úâÔ∏è Je souhaite une r√©ponse
        </Link>
        <span css={`display: inline-block; margin: 0.5rem 0.5rem;`}>ou</span>
        <Button
          type="submit"
          onClick={(e) => {
            e.preventDefault()
            const augmentedComment =
              comment +
              (fromLocation
                ? '\n> ' + 'Depuis la page' + ': `' + fromLocation + '`'
                : '')
            createIssue(augmentedComment)
          }}
          title="Cette contribution sera priv√©e et anonyme : n'h√©sitez pas √† vous exprimer"
        >
          ‚úç T√©moignage anonyme
        </Button> 
      </form>
    </>
  )
}

export const Button = styled.button`
  appearance: none;
  background: var(--color);
  color: white;
  padding: 0.8rem 1.2rem;
  border: none;
`

export const formStyle = `
label {
	display: block;
	margin-bottom: 1em;
}
label input, label textarea {
	display: block;
	border-radius: .3em;
	padding: .3em ;
	border: 1px solid var(--color);
	box-shadow: none;
	margin-top: .6em;
	font-size: 100%;
	width: 80%

}
label textarea {
	height: 10em;
}`